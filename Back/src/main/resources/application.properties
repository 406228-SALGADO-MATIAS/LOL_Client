spring.application.name=LeagueOfLegends_Client

spring.output.ansi.enabled=always

## Spring Data Source ##
spring.datasource.url=jdbc:h2:mem:testDB
//spring.datasource.url=jdbc:h2:file:./data/db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
springdoc.swagger-ui.doc-expansion=none

## Spring JPA ##
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update

## EL swagger ese
app.url=http://example.com
app.dev-name=Matias Salgado
app.dev-email=salgadomatias963@gmail.com
app.name=LoL_Client_Back
app.desc=This project is a simulation of the inner workings of the League of Legends client, focusing on the business logic that manages users, servers, champions, inventories, and matches.
app.version=1.0.0

# Swagger UI visible en /swagger-ui.html
springdoc.swagger-ui.path=/swagger-ui.html

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Puerto dinámico para Render
server.port=${PORT:8080}

